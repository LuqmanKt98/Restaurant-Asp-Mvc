@model WebRestoran.Models.Ingredient
@{
    ViewData["Title"] = "Inventory Details - " + Model.IngredientName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-primary fw-bold">
                    <i class="fas fa-box me-2"></i>@Model.IngredientName - Inventory Details
                </h2>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Inventory")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to Inventory
                    </a>
                    <a href="@Url.Action("Edit", "Ingredient", new { id = Model.IngredientId })" class="btn btn-primary">
                        <i class="fas fa-edit me-1"></i>Edit Ingredient
                    </a>
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row">
                <!-- Stock Status Card -->
                <div class="col-md-4 mb-4">
                    <div class="card @(Model.IsLowStock ? "border-warning" : "border-success") h-100">
                        <div class="card-header @(Model.IsLowStock ? "bg-warning" : "bg-success") text-white">
                            <h5 class="mb-0">
                                <i class="fas @(Model.IsLowStock ? "fa-exclamation-triangle" : "fa-check-circle") me-2"></i>
                                Stock Status
                            </h5>
                        </div>
                        <div class="card-body text-center">
                            <h2 class="@(Model.IsLowStock ? "text-warning" : "text-success") mb-3">
                                @Model.CurrentStock @Model.Unit
                            </h2>
                            <p class="text-muted mb-2">Current Stock</p>
                            <hr>
                            <p class="mb-1"><strong>Minimum Required:</strong> @Model.MinimumStock @Model.Unit</p>
                            @if (Model.IsLowStock)
                            {
                                <div class="alert alert-warning mt-3">
                                    <i class="fas fa-exclamation-triangle me-1"></i>
                                    <strong>Low Stock Alert!</strong><br>
                                    Need to restock @((Model.MinimumStock - Model.CurrentStock + 20)) @Model.Unit
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-success mt-3">
                                    <i class="fas fa-check me-1"></i>
                                    <strong>Stock Level Good</strong><br>
                                    @((Model.CurrentStock - Model.MinimumStock)) @Model.Unit above minimum
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Financial Information -->
                <div class="col-md-4 mb-4">
                    <div class="card border-info h-100">
                        <div class="card-header bg-info text-white">
                            <h5 class="mb-0">
                                <i class="fas fa-dollar-sign me-2"></i>Financial Information
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-12 mb-3">
                                    <h3 class="text-success mb-1">@((Model.CurrentStock * Model.CostPerUnit).ToString("C"))</h3>
                                    <p class="text-muted mb-0">Total Inventory Value</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-6 text-center">
                                    <h5 class="text-primary mb-1">@Model.CostPerUnit.ToString("C")</h5>
                                    <small class="text-muted">Cost per @Model.Unit</small>
                                </div>
                                <div class="col-6 text-center">
                                    <h5 class="text-info mb-1">@Model.CurrentStock</h5>
                                    <small class="text-muted">Units in Stock</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Supplier & Dates -->
                <div class="col-md-4 mb-4">
                    <div class="card border-secondary h-100">
                        <div class="card-header bg-secondary text-white">
                            <h5 class="mb-0">
                                <i class="fas fa-truck me-2"></i>Supplier & Timeline
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="fw-semibold text-muted">Supplier:</label>
                                <p class="mb-0">@Model.Supplier</p>
                            </div>
                            <div class="mb-3">
                                <label class="fw-semibold text-muted">Last Restocked:</label>
                                <p class="mb-0">@(Model.LastRestocked?.ToString("MMMM dd, yyyy") ?? "Never")</p>
                            </div>
                            <div class="mb-3">
                                <label class="fw-semibold text-muted">Created:</label>
                                <p class="mb-0">@Model.CreatedDate.ToString("MMMM dd, yyyy")</p>
                            </div>
                            <div class="mb-0">
                                <label class="fw-semibold text-muted">Last Updated:</label>
                                <p class="mb-0">@(Model.UpdatedDate?.ToString("MMMM dd, yyyy") ?? "Never updated")</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h5 class="mb-0"><i class="fas fa-tools me-2"></i>Quick Actions</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <h6 class="text-primary">Stock Management</h6>
                                    <div class="d-flex gap-2 mb-3">
                                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#updateStockModal">
                                            <i class="fas fa-plus me-1"></i>Update Stock
                                        </button>
                                        @if (Model.IsLowStock)
                                        {
                                            <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#restockModal">
                                                <i class="fas fa-exclamation-triangle me-1"></i>Urgent Restock
                                            </button>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <h6 class="text-primary">Ingredient Management</h6>
                                    <div class="d-flex gap-2">
                                        <a href="@Url.Action("Edit", "Ingredient", new { id = Model.IngredientId })" class="btn btn-outline-primary">
                                            <i class="fas fa-edit me-1"></i>Edit Details
                                        </a>
                                        <a href="@Url.Action("Details", "Ingredient", new { id = Model.IngredientId })" class="btn btn-outline-info">
                                            <i class="fas fa-info-circle me-1"></i>View Public Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Update Stock Modal -->
<div class="modal fade" id="updateStockModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Stock - @Model.IngredientName</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" action="@Url.Action("UpdateStock")">
                <div class="modal-body">
                    <input type="hidden" name="id" value="@Model.IngredientId" />
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Current Stock:</label>
                        <p class="text-muted">@Model.CurrentStock @Model.Unit</p>
                    </div>
                    <div class="mb-3">
                        <label for="newStock" class="form-label fw-semibold">New Stock Amount:</label>
                        <div class="input-group">
                            <input type="number" class="form-control" id="newStock" name="newStock" 
                                   step="0.01" min="0" value="@Model.CurrentStock" required>
                            <span class="input-group-text">@Model.Unit</span>
                        </div>
                        <div class="form-text">Enter the new total stock amount</div>
                    </div>
                    <div class="mb-3">
                        <label for="notes" class="form-label fw-semibold">Notes (Optional):</label>
                        <textarea class="form-control" id="notes" name="notes" rows="3" 
                                  placeholder="Add any notes about this stock update..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Stock</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Urgent Restock Modal -->
@if (Model.IsLowStock)
{
    <div class="modal fade" id="restockModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>Urgent Restock - @Model.IngredientName
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form method="post" action="@Url.Action("UpdateStock")">
                    <div class="modal-body">
                        <input type="hidden" name="id" value="@Model.IngredientId" />
                        <div class="alert alert-warning">
                            <strong>Low Stock Alert!</strong> Current stock (@Model.CurrentStock @Model.Unit) is below minimum required (@Model.MinimumStock @Model.Unit).
                        </div>
                        <div class="mb-3">
                            <label for="urgentNewStock" class="form-label fw-semibold">Recommended Restock Amount:</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="urgentNewStock" name="newStock" 
                                       step="0.01" min="@Model.MinimumStock" 
                                       value="@(Model.MinimumStock + 50)" required>
                                <span class="input-group-text">@Model.Unit</span>
                            </div>
                            <div class="form-text">Suggested: @(Model.MinimumStock + 50) @Model.Unit (minimum + buffer)</div>
                        </div>
                        <div class="mb-3">
                            <label for="urgentNotes" class="form-label fw-semibold">Restock Notes:</label>
                            <textarea class="form-control" id="urgentNotes" name="notes" rows="3" 
                                      placeholder="Urgent restock - contact @Model.Supplier">Urgent restock due to low stock alert</textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-warning">Urgent Restock</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<style>
    .card {
        transition: transform 0.2s;
    }
    .card:hover {
        transform: translateY(-2px);
    }
</style>