@model WebRestoran.Models.Order
@{
    ViewData["Title"] = $"Order #{Model.OrderId} Details";
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">Order #@Model.OrderId Details</h2>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Orders")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Orders
                    </a>
                </div>
            </div>

            <div class="row">
                <!-- Order Information -->
                <div class="col-lg-8">
                    <div class="card mb-4">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Order Information</h5>
                            <span class="badge @Model.StatusBadgeClass fs-6">@Model.StatusDisplayName</span>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <h6 class="fw-bold">Customer Details</h6>
                                    <p class="mb-1"><strong>Name:</strong> @(Model.User?.UserName ?? "Guest")</p>
                                    <p class="mb-1"><strong>Email:</strong> @(Model.User?.Email ?? "N/A")</p>
                                    <p class="mb-1"><strong>User ID:</strong> @Model.UserId</p>
                                    <p class="mb-3"><strong>Comment:</strong> @(Model.Comment ?? "No comment")</p>
                                </div>
                                <div class="col-md-6">
                                    <h6 class="fw-bold">Order Timeline</h6>
                                    <p class="mb-1"><strong>Created:</strong> @Model.CreatedDate.ToString("MMMM dd, yyyy HH:mm")</p>
                                    <p class="mb-1"><strong>Last Updated:</strong> @Model.UpdatedDate.ToString("MMMM dd, yyyy HH:mm")</p>
                                    @if (Model.EstimatedDeliveryTime.HasValue)
                                    {
                                        <p class="mb-1"><strong>Est. Delivery:</strong> @Model.EstimatedDeliveryTime.Value.ToString("MMMM dd, yyyy HH:mm")</p>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.ProcessedBy))
                                    {
                                        <p class="mb-1"><strong>Processed By:</strong> @Model.ProcessedBy</p>
                                    }
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.StatusNotes))
                            {
                                <div class="mt-3">
                                    <h6 class="fw-bold">Status Notes</h6>
                                    <div class="alert alert-info">
                                        @Model.StatusNotes
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Order Items</h5>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-hover mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Item</th>
                                            <th>Price</th>
                                            <th>Quantity</th>
                                            <th>Subtotal</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.OrderItems)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        @if (!string.IsNullOrEmpty(item.Food?.ImageUrl))
                                                        {
                                                            <img src="@item.Food.ImageUrl" alt="@item.Food.FoodName" 
                                                                 class="rounded me-3" style="width: 50px; height: 50px; object-fit: cover;">
                                                        }
                                                        <div>
                                                            <strong>@item.Food?.FoodName</strong>
                                                            @if (!string.IsNullOrEmpty(item.Food?.Description))
                                                            {
                                                                <br><small class="text-muted">@item.Food.Description</small>
                                                            }
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>@item.Price.ToString("C")</td>
                                                <td>
                                                    <span class="badge bg-light text-dark">@item.Quantity</span>
                                                </td>
                                                <td><strong>@((item.Price * item.Quantity).ToString("C"))</strong></td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot class="table-light">
                                        <tr>
                                            <th colspan="3" class="text-end">Total:</th>
                                            <th><strong>@Model.TotalAmount.ToString("C")</strong></th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Status Management -->
                <div class="col-lg-4">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Status Management</h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="fw-bold">Current Status:</label>
                                <div class="mt-2">
                                    <span class="badge @Model.StatusBadgeClass fs-6">@Model.StatusDisplayName</span>
                                </div>
                            </div>

                            @if (Model.CanBeProcessed || Model.CanBeCompleted || Model.CanBeCancelled)
                            {
                                <div class="mb-3">
                                    <label class="fw-bold">Available Actions:</label>
                                    <div class="d-grid gap-2 mt-2">
                                        @if (Model.CanBeProcessed)
                                        {
                                            <button type="button" class="btn btn-success" 
                                                    onclick="showStatusModal('Processing')">
                                                <i class="fas fa-play"></i> Start Processing
                                            </button>
                                        }
                                        @if (Model.CanBeCompleted)
                                        {
                                            <button type="button" class="btn btn-success" 
                                                    onclick="showStatusModal('Completed')">
                                                <i class="fas fa-check"></i> Mark as Completed
                                            </button>
                                        }
                                        @if (Model.CanBeCancelled)
                                        {
                                            <button type="button" class="btn btn-danger" 
                                                    onclick="showStatusModal('Cancelled')">
                                                <i class="fas fa-times"></i> Cancel Order
                                            </button>
                                        }
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle"></i>
                                    No status changes available for this order.
                                </div>
                            }

                            <!-- Order Summary -->
                            <div class="mt-4">
                                <h6 class="fw-bold">Order Summary</h6>
                                <div class="small">
                                    <div class="d-flex justify-content-between">
                                        <span>Items:</span>
                                        <span>@Model.OrderItems.Count</span>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span>Total Quantity:</span>
                                        <span>@Model.OrderItems.Sum(i => i.Quantity)</span>
                                    </div>
                                    <div class="d-flex justify-content-between fw-bold">
                                        <span>Total Amount:</span>
                                        <span>@Model.TotalAmount.ToString("C")</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Status Update Modal -->
<div class="modal fade" id="statusModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" action="@Url.Action("UpdateOrderStatus")">
                <div class="modal-header">
                    <h5 class="modal-title">Update Order Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="orderId" value="@Model.OrderId" />
                    <input type="hidden" name="newStatus" id="modalNewStatus" />
                    
                    <div class="mb-3">
                        <label class="form-label fw-bold">Change status to:</label>
                        <div id="modalStatusDisplay" class="fs-5"></div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="modalNotes" class="form-label">Notes (optional):</label>
                        <textarea class="form-control" name="notes" id="modalNotes" rows="3" 
                                  placeholder="Add any notes about this status change..."></textarea>
                    </div>
                    
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle"></i>
                        <strong>Warning:</strong> This action cannot be undone.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Status</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showStatusModal(newStatus) {
            document.getElementById('modalNewStatus').value = newStatus;
            
            const statusDisplay = document.getElementById('modalStatusDisplay');
            let badgeClass = '';
            
            switch(newStatus) {
                case 'Processing':
                    badgeClass = 'bg-info';
                    break;
                case 'Completed':
                    badgeClass = 'bg-success';
                    break;
                case 'Cancelled':
                    badgeClass = 'bg-danger';
                    break;
            }
            
            statusDisplay.innerHTML = `<span class="badge ${badgeClass}">${newStatus}</span>`;
            
            const modal = new bootstrap.Modal(document.getElementById('statusModal'));
            modal.show();
        }
    </script>
}