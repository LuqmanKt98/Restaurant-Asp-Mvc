@model WebRestoran.Models.Ingredient

@{
    ViewData["Title"] = "Delete Ingredient";
}

<!-- Page Header -->
<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="bg-gradient-danger text-white p-4 rounded-3 shadow-sm">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="mb-1"><i class="bi bi-trash me-2"></i>Delete Ingredient</h1>
                        <p class="mb-0 opacity-75">Confirm deletion of ingredient</p>
                    </div>
                    <div>
                        <a asp-action="Index" class="btn btn-light btn-lg">
                            <i class="bi bi-arrow-left me-2"></i>Back to List
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Confirmation Card -->
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-header bg-danger text-white py-3">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        Confirm Deletion
                    </h5>
                </div>
                <div class="card-body p-4">
                    <div class="text-center mb-4">
                        <div class="bg-danger bg-opacity-10 rounded-circle d-inline-flex align-items-center justify-content-center mb-3" style="width: 80px; height: 80px;">
                            <i class="bi bi-trash text-danger" style="font-size: 2rem;"></i>
                        </div>
                        <h4 class="text-danger mb-2">Are you sure you want to delete this ingredient?</h4>
                        <p class="text-muted">This action cannot be undone.</p>
                    </div>
                    
                    <!-- Ingredient Information -->
                    <div class="bg-light p-4 rounded mb-4">
                        <div class="row">
                            <div class="col-md-3">
                                <label class="form-label text-muted small fw-semibold">INGREDIENT ID</label>
                                <div class="mb-2">
                                    <span class="badge bg-secondary fs-6">#@Model.IngredientId</span>
                                </div>
                            </div>
                            <div class="col-md-9">
                                <label class="form-label text-muted small fw-semibold">INGREDIENT NAME</label>
                                <div>
                                    <h5 class="text-dark mb-0">@Model.IngredientName</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Associated Foods Warning -->
            @if (Model.FoodIngredients != null && Model.FoodIngredients.Count() > 0)
            {
                <div class="card shadow-sm border-warning mb-4">
                    <div class="card-header bg-warning text-dark py-3">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            Warning: Ingredient in Use
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-warning border-0 mb-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-exclamation-triangle-fill text-warning me-3" style="font-size: 1.5rem;"></i>
                                <div>
                                    <h6 class="mb-1">This ingredient is currently being used!</h6>
                                    <p class="mb-0">Deleting this ingredient will affect <strong>@Model.FoodIngredients.Count() food item(s)</strong>.</p>
                                </div>
                            </div>
                        </div>
                        
                        <h6 class="mb-3">Affected Food Items:</h6>
                        <div class="table-responsive">
                            <table class="table table-hover align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th scope="col">
                                            <i class="bi bi-basket me-2 text-muted"></i>Food ID
                                        </th>
                                        <th scope="col">
                                            <i class="bi bi-basket me-2 text-muted"></i>Food Name
                                        </th>
                                        <th scope="col" class="text-center">
                                            <i class="bi bi-gear me-2 text-muted"></i>Actions
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var foodIngredient in Model.FoodIngredients)
                                    {
                                        <tr>
                                            <td>
                                                <span class="badge bg-secondary fs-6">#@foodIngredient.Food?.FoodId</span>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="bg-warning bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px;">
                                                        <i class="bi bi-basket text-warning"></i>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0">@foodIngredient.Food?.FoodName</h6>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-center">
                                                <button type="button" class="btn btn-outline-info btn-sm" 
                                                        onclick="showFoodDetails(@foodIngredient.Food?.FoodId)"
                                                        data-bs-toggle="tooltip" 
                                                        title="View food details">
                                                    <i class="bi bi-eye me-1"></i>View
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        
                        <div class="mt-3 p-3 bg-light rounded">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-info-circle text-info me-2"></i>
                                <small class="text-muted">
                                    <strong>Recommendation:</strong> Consider removing this ingredient from all food items before deletion, or update the affected recipes.
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card shadow-sm border-success mb-4">
                    <div class="card-body text-center py-4">
                        <i class="bi bi-check-circle text-success mb-3" style="font-size: 3rem;"></i>
                        <h5 class="text-success mb-2">Safe to Delete</h5>
                        <p class="text-muted mb-0">This ingredient is not currently being used in any food items.</p>
                    </div>
                </div>
            }

            <!-- Action Buttons -->
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <form asp-action="Delete" method="post" id="deleteForm">
                        <input type="hidden" asp-for="IngredientId" />
                        
                        <div class="d-flex justify-content-center gap-3">
                            <button type="button" class="btn btn-danger btn-lg px-4" id="confirmDeleteBtn" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal">
                                <i class="bi bi-trash me-2"></i>Delete Ingredient
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary btn-lg px-4">
                                <i class="bi bi-x-circle me-2"></i>Cancel
                            </a>
                            <a asp-action="Details" asp-route-id="@Model.IngredientId" class="btn btn-outline-info btn-lg px-4">
                                <i class="bi bi-eye me-2"></i>View Details
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Confirmation Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title" id="confirmDeleteModalLabel">
                    <i class="bi bi-exclamation-triangle me-2"></i>Final Confirmation
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-4">
                <div class="mb-4">
                    <i class="bi bi-trash text-danger" style="font-size: 3rem;"></i>
                </div>
                <h5 class="mb-3">Are you absolutely sure?</h5>
                <p class="text-muted mb-4">
                    You are about to permanently delete the ingredient <strong>"@Model.IngredientName"</strong>.
                    This action cannot be undone.
                </p>
                @if (Model.FoodIngredients != null && Model.FoodIngredients.Count() > 0)
                {
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        This will affect <strong>@Model.FoodIngredients.Count() food item(s)</strong>!
                    </div>
                }
            </div>
            <div class="modal-footer border-0 justify-content-center">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-2"></i>Cancel
                </button>
                <button type="button" class="btn btn-danger" id="finalDeleteBtn">
                    <i class="bi bi-trash me-2"></i>Yes, Delete Permanently
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
            
            // Add loading animation for cards
            const cards = document.querySelectorAll('.card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                
                setTimeout(() => {
                    card.style.transition = 'all 0.4s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 150);
            });
            
            // Handle final delete confirmation
            const finalDeleteBtn = document.getElementById('finalDeleteBtn');
            const deleteForm = document.getElementById('deleteForm');
            
            finalDeleteBtn.addEventListener('click', function() {
                // Add loading state
                this.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Deleting...';
                this.disabled = true;
                
                // Submit the form after a short delay for UX
                setTimeout(() => {
                    deleteForm.submit();
                }, 1000);
            });
            
            // Add hover effects for buttons
            const buttons = document.querySelectorAll('.btn');
            buttons.forEach(button => {
                button.addEventListener('mouseenter', function() {
                    if (!this.disabled) {
                        this.style.transform = 'translateY(-1px)';
                        this.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';
                    }
                });
                
                button.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                    this.style.boxShadow = '';
                });
            });
            
            // Add hover effects for table rows
            const rows = document.querySelectorAll('tbody tr');
            rows.forEach(row => {
                row.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = 'rgba(255, 193, 7, 0.1)';
                    this.style.transform = 'translateX(5px)';
                });
                
                row.addEventListener('mouseleave', function() {
                    this.style.backgroundColor = '';
                    this.style.transform = 'translateX(0)';
                });
            });
            
            // Add pulse animation to warning elements
            const warningElements = document.querySelectorAll('.alert-warning');
            warningElements.forEach(element => {
                element.style.animation = 'pulse 2s infinite';
            });
            
            // Add CSS for pulse animation
            const style = document.createElement('style');
            style.textContent = `
                @@keyframes pulse {
                    0% { box-shadow: 0 0 0 0 rgba(255, 193, 7, 0.4); }
                    70% { box-shadow: 0 0 0 10px rgba(255, 193, 7, 0); }
                    100% { box-shadow: 0 0 0 0 rgba(255, 193, 7, 0); }
                }
            `;
            document.head.appendChild(style);
        });
    </script>
}